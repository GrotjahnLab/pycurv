
*** Generating a surface and a graph for a sphere with radius 10 and 0% noise***

Reading in the surface file to get a vtkPolyData surface...

Building the TriangleGraph from the vtkPolyData surface with curvatures...
TriangleGraph generation took: 0.0 min 6.06899094582 s
<Graph object, undirected, with 3608 vertices and 22470 edges at 0x2b5fe64f47d0>
Graph construction from surface took: 0.0 min 6.07474088669 s

Preparing for running modified Vector Voting...
radius_hit = 10
g_max = 15.7079632679
Maximal triangle area = 0.734539513584
epsilon = 0
eta = 0
Preparation took: 0.0 min 0.000396966934204 s

Running modified Vector Voting for all vertices...

First pass: estimating normals...
number of vertices: 3608
Calling find_geodesic_neighbors
Opened a pool with 6 processes
Average number of geodesic neighbors for all vertices: 1757.66574279
3608 surface patches
First pass took: 3.0 min 15.0096299648 s
Preparation took: 0.0 min 0.000625848770142 s

Second pass: estimating principle curvatures and directions for surface patches using RVV...
3608 vertices to estimate curvature
Calling find_geodesic_neighbors
Opened a pool with 6 processes
Second run of VV took: 4.0 min 6.55241203308 s
Whole method took: 7.0 min 21.5669169426 s

Evaluating RVV...
3608 "kappa_1" values
min = 0.099953380178, max = 0.114900261973, mean = 0.106607832703
3608 "kappa_2" values
min = 0.0843469931819, max = 0.0992392879483, mean = 0.0930580359836
3608 "max_curvature" values
min = -0.0194660411072, max = 0.300438706342, mean = 0.128772815988
3608 "min_curvature" values
min = -0.620921562112, max = 0.115293583957, mean = -0.0500214810891
Testing the maximal principal curvature (kappa_1)...
Testing the minimal principal curvature (kappa_2)...
